{"version":3,"sources":["components/Dialogs/Chat/Chat.module.css","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Chat/ChatContainer.jsx"],"names":["module","exports","Message","props","myMessage","className","styles","my_message_box","my_message","messageText","friend_message_box","friend_message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","tabIndex","message_creator_box","Field","textarea","name","placeholder","component","Textarea","validate","requiredWithoutMessage","message_creator_tools","textarea_button","onClick","e","currentTarget","blur","Chat","state","chatPage","messagesElements","chatData","messages","map","el","messageId","userId","chat_box","chat_header","to","back_button","friend_avatar","src","friendAvatar","alt","friend_name","friendName","chat_content","chat_footer","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,YAAc,0BAA0B,YAAc,0BAA0B,cAAgB,4BAA4B,YAAc,0BAA0B,aAAe,2BAA2B,eAAiB,6BAA6B,WAAa,yBAAyB,mBAAqB,iCAAiC,eAAiB,6BAA6B,YAAc,0BAA0B,oBAAsB,kCAAkC,SAAW,uBAAuB,sBAAwB,oCAAoC,gBAAkB,gC,uJCSpoBC,EAAU,SAACC,GACf,OAAOA,EAAMC,UACX,qBAAKC,UAAWC,IAAOC,eAAvB,SACE,sBAAMF,UAAWC,IAAOE,WAAxB,SAAqCL,EAAMM,gBAG7C,qBAAKJ,UAAWC,IAAOI,mBAAvB,SACE,sBAAML,UAAWC,IAAOK,eAAxB,SAAyCR,EAAMM,iBA6CrD,IAAMG,EAAYC,YAAiB,IA2B7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAzBL,SAACZ,GAKtB,OACE,sBAAMc,SAAUd,EAAMe,aAAtB,SACE,sBAAKC,SAAS,IAAId,UAAWC,IAAOc,oBAApC,UACE,cAACC,EAAA,EAAD,CACEhB,UAAWC,IAAOgB,SAClBC,KAAK,iBACLC,YAAY,UACZC,UAAWC,IACXC,SAAU,CAACC,IAAwBhB,KAErC,qBAAKP,UAAWC,IAAOuB,sBAAvB,SACE,wBAAQxB,UAAWC,IAAOwB,gBAAiBC,QAf/B,SAACC,GACnBA,EAAEC,cAAcC,QAcV,4BAaKC,EAvEf,SAAchC,GACZ,IAAIiC,EAAQjC,EAAMkC,SAEdC,EAAmBF,EAAMG,SAASC,SAASC,KAAI,SAACC,GAClD,OACE,cAAC,EAAD,CAEEC,UAAWD,EAAGC,UACdC,OAAQF,EAAGE,OACXxC,UAAWsC,EAAGtC,UACdK,YAAaiC,EAAGjC,aAJXiC,EAAGC,cAad,OACE,sBAAKtC,UAAWC,IAAOuC,SAAvB,UACE,sBAAKxC,UAAWC,IAAOwC,YAAvB,UACE,8BACE,cAAC,IAAD,CAASC,GAAG,WAAW1C,UAAWC,IAAO0C,gBAE3C,qBACE3C,UAAWC,IAAO2C,cAClBC,IAAKd,EAAMG,SAASY,aACpBC,IAAI,WAEN,oBAAI/C,UAAWC,IAAO+C,YAAtB,SAAoCjB,EAAMG,SAASe,gBAErD,qBAAKjD,UAAWC,IAAOiD,aAAvB,SAAsCjB,IACtC,qBAAKjC,UAAWC,IAAOkD,YAAvB,SACE,cAAC1C,EAAD,CAAqBG,SAnBP,SAACwC,GACnBtD,EAAMuD,YAAYD,EAAOE,yBCfdC,sBACbC,aAfoB,SAACzB,GACrB,MAAO,CACLC,SAAUD,EAAMC,aAIK,SAACyB,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAOhCK,IAFaJ,CAGbzB","file":"static/js/4.52aba3b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat_box\":\"Chat_chat_box__2AFMS\",\"chat_header\":\"Chat_chat_header__224MK\",\"back_button\":\"Chat_back_button__2shHY\",\"friend_avatar\":\"Chat_friend_avatar__1BD1E\",\"friend_name\":\"Chat_friend_name__2ziaA\",\"chat_content\":\"Chat_chat_content__1Cev8\",\"my_message_box\":\"Chat_my_message_box__1qIHk\",\"my_message\":\"Chat_my_message__WMOUm\",\"friend_message_box\":\"Chat_friend_message_box__WSMRd\",\"friend_message\":\"Chat_friend_message__3WaS0\",\"chat_footer\":\"Chat_chat_footer__3zHSe\",\"message_creator_box\":\"Chat_message_creator_box__1i6X_\",\"textarea\":\"Chat_textarea__1ywHp\",\"message_creator_tools\":\"Chat_message_creator_tools__2zkX7\",\"textarea_button\":\"Chat_textarea_button__1HJxt\"};","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport styles from \"./Chat.module.css\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredWithoutMessage,\r\n} from \"../../../utils/validators/validators.js\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst Message = (props) => {\r\n  return props.myMessage ? (\r\n    <div className={styles.my_message_box}>\r\n      <span className={styles.my_message}>{props.messageText}</span>\r\n    </div>\r\n  ) : (\r\n    <div className={styles.friend_message_box}>\r\n      <span className={styles.friend_message}>{props.messageText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Chat(props) {\r\n  let state = props.chatPage;\r\n\r\n  let messagesElements = state.chatData.messages.map((el) => {\r\n    return (\r\n      <Message\r\n        key={el.messageId}\r\n        messageId={el.messageId}\r\n        userId={el.userId}\r\n        myMessage={el.myMessage}\r\n        messageText={el.messageText}\r\n      />\r\n    );\r\n  });\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chat_box}>\r\n      <div className={styles.chat_header}>\r\n        <div>\r\n          <NavLink to=\"/dialogs\" className={styles.back_button}></NavLink>\r\n        </div>\r\n        <img\r\n          className={styles.friend_avatar}\r\n          src={state.chatData.friendAvatar}\r\n          alt=\"avatar\"\r\n        ></img>\r\n        <h3 className={styles.friend_name}>{state.chatData.friendName}</h3>\r\n      </div>\r\n      <div className={styles.chat_content}>{messagesElements}</div>\r\n      <div className={styles.chat_footer}>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n  let buttonOnClick = (e) => {\r\n    e.currentTarget.blur();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div tabIndex=\"0\" className={styles.message_creator_box}>\r\n        <Field\r\n          className={styles.textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Message\"\r\n          component={Textarea}\r\n          validate={[requiredWithoutMessage, maxLength]}\r\n        />\r\n        <div className={styles.message_creator_tools}>\r\n          <button className={styles.textarea_button} onClick={buttonOnClick}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport {\r\n  sendMessageCreator,\r\n} from \"../../../redux/chat-reducer\";\r\nimport Chat from \"./Chat\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    chatPage: state.chatPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Chat);\r\n"],"sourceRoot":""}